workflow:
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
    - if: '$CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH'

build:
  stage: build
  tags:
    - build
  image: docker:latest
  variables:
    IMAGE_TAG: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG
    DOCKER_TLS_CERTDIR: "/certs"
    VERSION: "v1.1"
  # Specify an additional image 'docker:dind' ("Docker-in-Docker") that
  # will start up the Docker daemon when it is brought up by a runner.
  services:
    - name: docker:dind
  script:
    - docker info
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker build -t $IMAGE_TAG .
    - docker tag $IMAGE_TAG $CI_REGISTRY_IMAGE:$VERSION
    - docker push $IMAGE_TAG
    - docker push $CI_REGISTRY_IMAGE:$VERSION
  rules:
    - if: $CI_COMMIT_REF_NAME == $CI_DEFAULT_BRANCH

build_dev:
  stage: build
  tags:
    - build_dev
  image: docker:latest
  variables:
    IMAGE_TAG: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG
    DOCKER_TLS_CERTDIR: "/certs"
  # Specify an additional image 'docker:dind' ("Docker-in-Docker") that
  # will start up the Docker daemon when it is brought up by a runner.
  services:
    - name: docker:dind
  script:
    - docker info
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker build -t $IMAGE_TAG .
    - docker tag $IMAGE_TAG $CI_REGISTRY_IMAGE:develop
    - docker push $IMAGE_TAG
    - docker push $CI_REGISTRY_IMAGE:develop
  rules:
    - if: $CI_COMMIT_REF_NAME != $CI_DEFAULT_BRANCH